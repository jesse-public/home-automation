# HomeKit device adoption notice: Use compose.homekit-device-adoption.yml

networks:
  frontend:
    driver: bridge
  ha-reverse-proxy-backend:
    external: true
  internet:
    driver: bridge
  zwave:
    internal: true # comment out this line during initial setup to access webui

services:
  caddy:
    # Use custom dockerfile to build with required dns module
    build: ./caddy
    container_name: caddy
    depends_on:
      - ha
    environment:
      - CF_API_TOKEN
      - CF_ZONE_TOKEN
    networks:
      frontend:
      ha-reverse-proxy-backend:
        ipv4_address: ${REVERSE_PROXY_IP_ADDRESS}
    volumes:
      - ./volumes/caddy/caddy_config:/config
      - ./volumes/caddy/caddy_data:/data
      - ./volumes/caddy/conf:/etc/caddy
      - ./volumes/caddy/site:/srv
    ports:
      - ${CLIENT_IP}:443:443/tcp
    restart: unless-stopped

# To update configs, use esphome repo locally with enc.
#  esphome:
#    container_name: esphome
#    image: ghcr.io/esphome/esphome
#    volumes:
#      - ./volumes/esphome-config:/config
#    environment:
#      ESPHOME_DASHBOARD_USE_PING: "true"
#    ports:
#      - 6052:6052/tcp
#    restart: unless-stopped

  ha:
    image: lscr.io/linuxserver/homeassistant:latest
    container_name: ha
    depends_on:
      - zwave-js-ui
    volumes:
      - ./volumes/ha/config:/config
    environment:
      - PGID=1000
      - PUID=1000
      - REVERSE_PROXY_IP_ADDRESS
      - TZ
    networks:
      - ha-reverse-proxy-backend
      - internet
      - zwave
    devices:
      - /dev/serial/by-id/<your_zigbee_adapter_id>:/dev/ttyUSB1
    # ports:
    # Application WebUI, only use this if you are not using a reverse proxy
    #   - ${CLIENT_IP}:8123:8123/tcp
    restart: unless-stopped

  # nginx:
  #   image: lscr.io/linuxserver/nginx:latest
  #   container_name: ha-nginx
  #   depends_on:
  #     - ha
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ
  #   networks:
  #     frontend:
  #     ha-reverse-proxy-backend:
  #       ipv4_address: ${REVERSE_PROXY_IP_ADDRESS}
  #   volumes:
  #     - ./volumes/nginx/config:/config
  #   ports:
  #     - ${CLIENT_IP}:443:443
  #   restart: unless-stopped

  zwave-js-ui:
    image: zwavejs/zwave-js-ui:latest
    container_name: zwave-js-ui
    # tty: true
    # stop_signal: SIGINT
    environment:
      - SESSION_SECRET
      - TZ
      - ZWAVEJS_EXTERNAL_CONFIG=/usr/src/app/store/.config-db
    networks:
      - zwave
    devices:
      - /dev/serial/by-id/<your_zwave_adapter_id>:/dev/zwave
    volumes:
      - ./volumes/zwave-js-ui/store:/usr/src/app/store
    ports:
      # - ${CLIENT_IP}:8091:8091/tcp # web interface -- enable for initial setup along with disabling internal zwave network above
      - 3000:3000/tcp # Z-Wave JS websocket server
    restart: unless-stopped
